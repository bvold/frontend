<!-- // src/pages/[section]/index.astro -->
---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import type { CollectionEntry } from 'astro:content';

// Define valid section names
type ValidSection = 'general' | 'tech' | 'photo' | 'bible' | 'language';

// Type guard to check if a string is a valid section
function isValidSection(section: string): section is ValidSection {
  return ['general', 'tech', 'photo', 'bible', 'language'].includes(section);
}

export async function getStaticPaths() {
  return [
    { params: { section: 'general' }, props: { title: 'General Blog' } },
    { params: { section: 'tech' }, props: { title: 'Development Blog' } },
    { params: { section: 'photo' }, props: { title: 'Photography Blog' } },
    { params: { section: 'bible' }, props: { title: 'Bible & Prophecy Blog' } },
    { params: { section: 'language' }, props: { title: 'Language Learning Blog' } },
  ];
}

const { section } = Astro.params;
const { title } = Astro.props;

if (!section || !isValidSection(section)) {
  throw new Error(`Invalid section: ${section}`);
}

const posts = await getCollection(section);
const sortedPosts = posts.sort(
  (a: CollectionEntry<typeof section>, b: CollectionEntry<typeof section>) => 
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<BaseLayout title={title}>
  <section>
    <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {sortedPosts.map((post) => (
          <li class="bg-white rounded-lg shadow-md overflow-hidden">
          <a href={`/${section}/${post.slug}/`} class="block hover:opacity-90 transition-opacity">
            {post.data.heroImage && (
              <img 
                src={post.data.heroImage} 
                alt="" 
                class="w-full h-48 object-cover"
              />
            )}
            <div class="p-4">
              <h4 class="text-xl font-semibold mb-2">{post.data.title}</h4>
              {post.data.description && (
                <p class="text-gray-600 mb-2">{post.data.description}</p>
              )}
              <p class="text-gray-500 text-sm">
                <FormattedDate date={post.data.pubDate} />
              </p>
            </div>
          </a>
        </li>
      ))}
    </ul>
  </section>
</BaseLayout>